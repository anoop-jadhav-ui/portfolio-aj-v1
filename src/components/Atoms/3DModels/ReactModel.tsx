/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 --types ./src/assets/3dModels/react.glb --transform -s
*/

import { useGLTF } from '@react-three/drei'
import React from 'react'
import * as THREE from 'three'
import { GLTF } from 'three-stdlib'
import CanvasHOC from '../../Molecules/CanvasHOC/CanvasHOC'

type GLTFResult = GLTF & {
    nodes: {
        reactjs: THREE.Mesh
        ring1: THREE.Mesh
        ring2: THREE.Mesh
        ring3: THREE.Mesh
    }
    materials: {}
}

const reactBlueMaterial = new THREE.MeshPhysicalMaterial({
    color: '#61dbfb',
    roughness: 1,
    clearcoat: 1,
})

function ReactModel(props: JSX.IntrinsicElements['group']) {
    const { nodes, materials } = useGLTF(
        '/react-transformed.glb'
    ) as unknown as GLTFResult
    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.reactjs.geometry}
                material={reactBlueMaterial}
                scale={0.57}
            >
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.ring1.geometry}
                    material={reactBlueMaterial}
                    position={[0, 0, 0.07]}
                    scale={1.76}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.ring2.geometry}
                    material={reactBlueMaterial}
                    position={[0, 0, 0.73]}
                    scale={1.76}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.ring3.geometry}
                    material={reactBlueMaterial}
                    position={[0, 0, -0.59]}
                    scale={1.76}
                />
            </mesh>
        </group>
    )
}

useGLTF.preload('/react-transformed.glb')

export default CanvasHOC(ReactModel, 'React Js', {
    rotation: [0, -Math.PI / 9, 0],
    polar: [0, Math.PI / 8],
    azimuth: [-Math.PI / 6, Math.PI / 6],
})
